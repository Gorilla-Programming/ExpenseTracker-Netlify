{"version":3,"sources":["components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/UI/Card.js","components/ExpenseFilter/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ChartBar","props","barFilledHeight","maxValue","Math","round","value","className","style","height","label","Chart","dataPointsValues","dataPoints","map","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","expense","date","getMonth","amount","Card","classes","children","ExpensesFilter","selected","onChange","event","onSelectedYearData","target","ExpenseDate","month","data","toLocaleDateString","year","getFullYear","day","ExpenseItem","title","ExpensesList","item","length","id","Expenses","useState","selectedYear","setSelectedYear","filteredArray","filter","exp","toString","selectedYearValue","ExpenseForm","enteredTitle","setEnteredTitle","enteredDate","setEnteredDate","enteredAmount","setEnteredAmount","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","onSetStateForIsEditing","type","min","step","onClick","NewExpense","stateForIsEditing","setStateForIsEditing","changeStateForIsEditing","onAddExpense","Dummy_Expenses","App","setExpenses","preExpense","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.856358be.chunk.js","sourcesContent":["import './ChartBar.css';\r\n\r\nimport React from 'react';\r\n\r\nfunction ChartBar(props){\r\n\r\n    let barFilledHeight = '0%';\r\n    if(props.maxValue > 0){\r\n        barFilledHeight = Math.round((props.value/ props.maxValue)*100) + '%';\r\n\r\n    }\r\n    \r\n    return(\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className = \"chart-bar__fill\" style={{height : barFilledHeight}}></div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">{props.label}\r\n            \r\n            </div>\r\n        \r\n        </div>)\r\n\r\n}\r\n\r\n\r\nexport default ChartBar;","import ChartBar from './ChartBar';\r\n\r\nimport React from 'react';\r\n\r\nimport './Chart.css'\r\n\r\nfunction Chart(props){\r\n    const dataPointsValues = props.dataPoints.map(dataPoint => dataPoint.value)\r\n    const totalMaximum = Math.max(...dataPointsValues)\r\n\r\n    return (\r\n      <div className=\"chart\">\r\n        {props.dataPoints.map((dataPoint) => (\r\n          <ChartBar\r\n            key={dataPoint.label}\r\n            value={dataPoint.value}\r\n            maxValue={totalMaximum}\r\n            label={dataPoint.label}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Chart;","import React from \"react\";\r\nimport Chart from '../Chart/Chart'\r\n\r\nfunction ExpensesChart(props){\r\n\r\n\r\n    const chartDataPoints = [\r\n        {label:'Jan' , value : 0},\r\n        {label:'Feb' , value : 0},\r\n        {label:'Mar' , value : 0},\r\n        {label:'Apr' , value : 0},\r\n        {label:'May' , value : 0},\r\n        {label:'Jun' , value : 0},\r\n        {label:'Jul' , value : 0},\r\n        {label:'Aug' , value : 0},\r\n        {label:'Sep' , value : 0},\r\n        {label:'Oct' , value : 0},\r\n        {label:'Nov' , value : 0},\r\n        {label:'Dec' , value : 0},\r\n    ];\r\n\r\n    for(const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth()\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return(\r\n\r\n        <Chart dataPoints = {chartDataPoints}/>\r\n\r\n    )\r\n}\r\n\r\nexport default ExpensesChart;","import './Card.css'\r\n;\r\n\r\nfunction Card(props){\r\n    const classes = 'card ' + props.className;\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\n\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n    const filterOptionHandler=(event)=>{\r\n      props.onSelectedYearData(event.target.value)\r\n    }\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        {props.selected === 'All' ? <label>No filter</label>:<label>Filter by Year {props.selected} </label>}\r\n        <select value={props.selected} onChange = {filterOptionHandler}>\r\n          <option value='All'>No Filter</option>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>        \r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ExpenseDate.css'\r\n\r\nfunction ExpenseDate(props) {\r\n  const month = props.data.toLocaleDateString(\"en-US\", { month: \"long\" });\r\n  const year = props.data.getFullYear();\r\n  const day = props.data.toLocaleDateString(\"en-US\", { year: \"2-digit\" });\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import './ExpenseItem.css';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport React from 'react';\r\n\r\nimport Card from '../UI/Card';\r\n\r\nfunction ExpenseItem(props) {\r\n\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate data = {props.data.date}/>\r\n      <div className = \"expense-item__description\"><h2>{props.data.title}</h2></div>\r\n      <div className = \"expense-item__price\">${props.data.amount}</div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import './ExpensesList.css';\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nfunction ExpensesList(props){\r\n\r\n    if(props.item.length === 0){\r\n        return <h2  className = \"expenses-list__fallback\">No Expense Found</h2>\r\n    }\r\n\r\n    return(\r\n    <ul className = \"expenses-list\">\r\n        {\r\n            props.item.map((expense) => (\r\n                <ExpenseItem key={expense.id} data={expense} />\r\n              ))\r\n        }\r\n    \r\n    </ul>\r\n    \r\n    )\r\n\r\n}\r\n\r\nexport default ExpensesList;","import React,{useState} from 'react';\r\nimport './Expenses.css';\r\nimport ExpensesChart from './ExpensesChart';\r\nimport Card from '../UI/Card.js';\r\nimport ExpensesFilter from \"../ExpenseFilter/ExpensesFilter\";\r\nimport ExpensesList from './ExpensesList';\r\n\r\nfunction Expenses(props) {\r\n\r\n    const [selectedYear,setSelectedYear] = useState('All');\r\n\r\n    const selectedYearData = (selectedYearValue) =>{\r\n      setSelectedYear(selectedYearValue);\r\n    }\r\n\r\n    const filteredArray = props.data.filter(exp => {\r\n      return exp.date.getFullYear().toString() === selectedYear;\r\n    });\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selected={selectedYear}\r\n        onSelectedYearData={selectedYearData}\r\n      ></ExpensesFilter>\r\n      {selectedYear === \"All\" ?<ExpensesChart expenses = {props.data} />:<ExpensesChart expenses = {filteredArray}/>}\r\n      {selectedYear === \"All\" && <ExpensesList item = {props.data}/>}\r\n      {selectedYear !== \"All\" && <ExpensesList item = {filteredArray}/>}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;","import React, {useState} from \"react\";\r\n\r\nimport './ExpenseForm.css'\r\n\r\nfunction ExpenseForm(props) {\r\n\r\n    const [enteredTitle,setEnteredTitle] = useState('');\r\n    const [enteredDate,setEnteredDate] = useState('');\r\n    const [enteredAmount,setEnteredAmount] = useState('');\r\n    const titleHandler=(event)=>{\r\n        setEnteredTitle(event.target.value);\r\n    }\r\n    const dateHandler=(event)=>{\r\n        setEnteredDate(event.target.value);\r\n    }\r\n    const amountHandler=(event)=>{\r\n        setEnteredAmount(event.target.value);\r\n    }\r\n    const submitHandler=(event)=>{\r\n        event.preventDefault();\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            date: new Date(enteredDate),\r\n            amount: enteredAmount\r\n        }\r\n\r\n        props.onSaveExpenseData(expenseData);\r\n\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n\r\n        props.onSetStateForIsEditing();\r\n    }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input type=\"text\" value={enteredTitle} onChange={titleHandler}/>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" value={enteredDate} onChange={dateHandler}/>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input type=\"number\" min=\"0.01\" step=\"0.01\" value={enteredAmount} onChange={amountHandler}/>\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button onClick = {props.onSetStateForIsEditing}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;\r\n","import React, {useState} from \"react\";\r\nimport ExpenseForm from './ExpenseForm'\r\nimport './NewExpense.css'\r\n\r\nfunction NewExpense(props) {\r\n\r\n    const saveExpenseDataHandler = (expenseData) =>{\r\n        props.onAddExpense(expenseData);\r\n    }\r\n\r\n    const [stateForIsEditing ,setStateForIsEditing] = useState(false);\r\n\r\n    const changeStateForIsEditing = () => {\r\n      if (stateForIsEditing === true){\r\n        setStateForIsEditing(false)\r\n      }\r\n      else{\r\n        setStateForIsEditing(true)\r\n      }\r\n    }\r\n\r\n  return (\r\n  <div className=\"new-expense\">\r\n        {!stateForIsEditing && <button onClick = {changeStateForIsEditing}>NEW EXPENSE</button>}\r\n        {stateForIsEditing && <ExpenseForm onSaveExpenseData = {saveExpenseDataHandler} onSetStateForIsEditing = {changeStateForIsEditing}/>}\r\n  </div>);\r\n}\r\n\r\nexport default NewExpense;\r\n","import Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport React, { useState } from \"react\";\n\nconst Dummy_Expenses = [\n  {\n    id: \"e1\",\n    title: \"Coke\",\n    amount: 4.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"Dress\", amount: 49.49, date: new Date(2021, 8, 12) },\n  {\n    id: \"e3\",\n    title: \"Rice\",\n    amount: 14.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"Vegetables\",\n    amount: 23.34,\n    date: new Date(2021, 5, 12),\n  },\n];\nfunction App() {\n  const [expenses, setExpenses] = useState(Dummy_Expenses);\n  const addExpenseHandler = (expenseData) => {\n    setExpenses((preExpense) => {\n      return [expenseData, ...preExpense];\n    });\n  };\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses data={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n "],"sourceRoot":""}